<?php

namespace App\Repository;

use Doctrine\Bundle\DoctrineBundle\Repository\ServiceEntityRepository;

/**
 * EstcRepository.
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class EstcMarcRepository extends ServiceEntityRepository {
    /**
     * Create a query to return records for the index page.
     *
     * @return \Doctrine\ORM\Query
     */
    public function indexQuery() {
        $qb = $this->createQueryBuilder('m');
        $qb->where("m.field = 'ldr'");

        return $qb->getQuery();
    }

    /**
     * Execute a search query over the 245 and 100 fields.
     *
     * @param string $q
     *
     * @return mixed
     */
    public function searchQuery($q) {
        $dql = <<<'ENDSQL'
SELECT e.titleId, max(MATCH (e.fieldData) AGAINST (:q BOOLEAN)) as HIDDEN score
FROM App:EstcMarc e
WHERE MATCH (e.fieldData) AGAINST (:q BOOLEAN) > 0 AND e.field IN ('245' , '100')
group by e.titleId order by score desc
ENDSQL;
        $query = $this->_em->createQuery($dql);
        $query->setParameter('q', $q);

        return $query->execute();
    }

    /**
     * Run a search query over the 260 field (imprint).
     *
     * @param string $q
     *
     * @return mixed
     */
    public function imprintSearchQuery($q) {
        $dql = <<<'ENDSQL'
SELECT e.titleId, max(MATCH (e.fieldData) AGAINST (:q BOOLEAN)) as HIDDEN score
FROM App:EstcMarc e
WHERE MATCH (e.fieldData) AGAINST (:q BOOLEAN) > 0 AND e.field = '260' and e.subfield = 'b'
group by e.titleId order by score desc
ENDSQL;
        $query = $this->_em->createQuery($dql);
        $query->setParameter('q', $q);

        return $query->execute();
    }
}
